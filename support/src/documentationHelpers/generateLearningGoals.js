#!/usr/bin/env node
/**
 * Generate learning goals markdown based on a specific course from programmeStructure.json.
 * The course argument must match the name key in the JSON file exactly.
 * It outputs to the command line.
 * This markdown is currently used in course Readme.md files.
 * 
 * Note that this code was mostly generated by AI.
 *
 * Usage:
 *   npm run generate:learninggoals <course-name>
 */

import { readFile, writeFile, stat } from "fs/promises";
import { join, dirname } from "path";
import { fileURLToPath } from "url";
import process from "process";

const jsonPath = "programmeStructure.json";
const outputLines = [];

function extractLearningGoals(content) {
  const sectionRegex = /#+\s*Learning goals\s*\n([\s\S]*?)(?=\n#+\s|$)/i;
  const match = content.match(sectionRegex);

  if (!match) return { found: false, goals: [] };

  const section = match[1];
  const lines = section.split("\n");
  const bullets = lines.filter((line) => /^\s*[-*+]\s+.+/.test(line));

  return {
    found: true,
    goals: bullets.map((b) => b.replace(/^\s*/, (match) => match)),
  };
}

async function processCourse(courseName) {
  const data = JSON.parse(await readFile(jsonPath, "utf-8"));
  const course = data.courses.find(c => c.name === courseName);

  if (!course) {
    console.log("Course not found in json. Please provide a valid one.");
    process.exit(1);
  }

  for (const module of course.modules) {
    outputLines.push(`### [${module.name}](${module.location})\n`);

    const modulePath = join(scriptDir, "../../../", module.location);
    const readmePath = join(modulePath, "README.md");

    // Check if module directory exists
    try {
      const moduleStats = await stat(modulePath);
      if (!moduleStats.isDirectory()) {
        outputLines.push(
          `> ❌ Module path is not a directory: \`${module.location}\`\n`,
        );
        continue;
      }
    } catch {
      outputLines.push(
        `> ❌ Module directory not found at \`${module.location}\`\n`,
      );
      continue;
    }

    // Try reading README
    let content;
    try {
      content = await readFile(readmePath, "utf-8");
    } catch {
      outputLines.push(
        `> ❌ Missing README.md in module directory \`${module.location}\`\n`,
      );
      continue;
    }

    const { found, goals } = extractLearningGoals(content);
    if (!found) {
      outputLines.push(
        `> ❌ "Learning goals" section not found in \`${module.location}\`\n`,
      );
    } else if (goals.length === 0) {
      outputLines.push(
        `> ⚠️ "Learning goals" section is empty in \`${module.location}\`\n`,
      );
    } else {
      goals.forEach((goal) => outputLines.push(`${goal}`));
    }

    outputLines.push("");
  }

  console.log(outputLines.join("\n"));
}

const courseName = process.argv.slice(2)[0];
if (!courseName) {
  console.log("Please provide a course name as an argument. It should appear in programmeStructure.json.");
  process.exit(1);
}
console.log("Here's a summary of the learning goals for the course:", courseName);
console.log("You can copy and paste these into the course Readme.md :-)");
console.log("---------------------------------------------------\n");

processCourse(courseName);
